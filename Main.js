import React, { useEffect, useState } from "react";
import { ScrollView, Text, View, Image, Animated, Easing, TouchableOpacity, Alert } from "react-native";
import Icon from "react-native-vector-icons/Ionicons";
import { Audio } from "expo-av";

const tips = [
  {
    title: "–ó–Ω–∞–µ—à—å –ª–∏ —Ç—ã?",
    text: "–û–≤—Å—è–Ω–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –±–µ—Ç–∞-–≥–ª—é–∫–∞–Ω, –∫–æ—Ç–æ—Ä—ã–π —Å–Ω–∏–∂–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å —Ö–æ–ª–µ—Å—Ç–µ—Ä–∏–Ω–∞.",
    image: "https://avatars.mds.yandex.net/i?id=f2a89966b2b64c4afafb0447abc53543cb472936-4872083-images-thumbs&n=13",
  },
  {
    title: "–§–∞–∫—Ç –¥–Ω—è",
    text: "20 –º–∏–Ω—É—Ç —Ö–æ–¥—å–±—ã –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ —É–ª—É—á—à–∞—é—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –Ω–∞ 60%.",
    image: "https://avatars.mds.yandex.net/i?id=4a5346ede7bf72482f1c95896046ea0e_l-4577239-images-thumbs&n=13",
  },
];

const quotes = [
  "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî —ç—Ç–æ —à–∞–Ω—Å —Å—Ç–∞—Ç—å –ª—É—á—à–µ.",
  "–¢—ã —Å–∏–ª—å–Ω–µ–µ, —á–µ–º –¥—É–º–∞–µ—à—å.",
  "–ù–∞—á–Ω–∏ —Å –º–∞–ª–æ–≥–æ, –Ω–æ –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Å—è.",
  "–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ ‚Äî —ç—Ç–æ –º–æ—Å—Ç –º–µ–∂–¥—É —Ü–µ–ª—è–º–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏.",
  "–ó–∞–±–æ—Ç—å—Å—è –æ —Ç–µ–ª–µ ‚Äî —ç—Ç–æ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –¥–æ–º, –≥–¥–µ —Ç—ã –∂–∏–≤–µ—à—å.",
];

const categories = [
  { name: "–ú–æ—Ç–∏–≤–∞—Ü–∏—è", icon: "flame-outline" },
  { name: "–ü—Ä–∏–≤—ã—á–∫–∏", icon: "repeat-outline" },
  { name: "–î—ã—Ö–∞–Ω–∏–µ", icon: "cloud-outline" },
  { name: "–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –¥–Ω—è", icon: "walk-outline" },
];

export default function MainScreen() {
  const [breathAnim] = useState(new Animated.Value(1));
  const [sound, setSound] = useState();
  const [isPlaying, setIsPlaying] = useState(false);
  const [waterCount, setWaterCount] = useState(0);
  const [quote, setQuote] = useState("");
  const [glassScale] = useState(new Animated.Value(1));

  async function toggleSound() {
    if (isPlaying && sound) {
      await sound.stopAsync();
      setIsPlaying(false);
      return;
    }

    const { sound: newSound } = await Audio.Sound.createAsync(
      { uri: "https://github.com/akezhans/Audio/raw/refs/heads/main/rain-sound-188158.mp3" }
    );
    setSound(newSound);
    await newSound.playAsync();
    setIsPlaying(true);
  }

  const addWater = () => {
    if (waterCount < 8) {
      setWaterCount(waterCount + 1);
      Animated.sequence([
        Animated.timing(glassScale, {
          toValue: 1.3,
          duration: 150,
          useNativeDriver: true,
        }),
        Animated.timing(glassScale, {
          toValue: 1,
          duration: 150,
          useNativeDriver: true,
        })
      ]).start();
    } else {
      Alert.alert("–û—Ç–ª–∏—á–Ω–æ!", "–¢—ã —É–∂–µ –≤—ã–ø–∏–ª 8 —Å—Ç–∞–∫–∞–Ω–æ–≤ —Å–µ–≥–æ–¥–Ω—è!");
    }
  };

  useEffect(() => {
    const breathe = () => {
      Animated.sequence([
        Animated.timing(breathAnim, {
          toValue: 1.5,
          duration: 5000,
          easing: Easing.inOut(Easing.ease),
          useNativeDriver: true,
        }),
        Animated.timing(breathAnim, {
          toValue: 1,
          duration: 5000,
          easing: Easing.inOut(Easing.ease),
          useNativeDriver: true,
        })
      ]).start(() => breathe());
    };
    breathe();

    // –°–ª—É—á–∞–π–Ω–∞—è —Ü–∏—Ç–∞—Ç–∞ –¥–Ω—è
    const randomIndex = Math.floor(Math.random() * quotes.length);
    setQuote(quotes[randomIndex]);
  }, []);

  return (
    <ScrollView style={{ padding: 16, backgroundColor: "#fff" }}>
      <Text style={{ fontSize: 24, fontWeight: "bold", marginBottom: 16 }}>–ì–ª–∞–≤–Ω–∞—è</Text>

      {/* üåü –¶–∏—Ç–∞—Ç–∞ –¥–Ω—è */}
      <View style={{
        backgroundColor: "#fef3c7",
        padding: 16,
        borderRadius: 16,
        marginBottom: 20,
      }}>
        <Text style={{ fontSize: 18, fontWeight: "600", marginBottom: 8 }}>–¶–∏—Ç–∞—Ç–∞ –¥–Ω—è</Text>
        <Text style={{ fontSize: 16, fontStyle: "italic", color: "#92400e" }}>{quote}</Text>
      </View>

      {/* –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã */}
      {tips.map((tip, idx) => (
        <View key={idx} style={{
          backgroundColor: "#f8f8f8",
          borderRadius: 16,
          marginBottom: 16,
          overflow: "hidden",
          shadowColor: "#000",
          shadowOpacity: 0.1,
          shadowRadius: 5,
          elevation: 3,
        }}>
          <Image
            source={{ uri: tip.image }}
            style={{ width: "100%", height: 160 }}
            resizeMode="cover"
          />
          <View style={{ padding: 12 }}>
            <Text style={{ fontSize: 18, fontWeight: "600", marginBottom: 4 }}>{tip.title}</Text>
            <Text style={{ fontSize: 14, color: "#555" }}>{tip.text}</Text>
          </View>
        </View>
      ))}

      {/* –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
      <Text style={{ fontSize: 18, fontWeight: "600", marginBottom: 8 }}>–û—Ç–∫—Ä–æ–π –¥–ª—è —Å–µ–±—è</Text>
      <ScrollView horizontal showsHorizontalScrollIndicator={false} style={{ marginBottom: 20 }}>
        {categories.map((cat, idx) => (
          <View key={idx} style={{
            backgroundColor: "#e0f2fe",
            borderRadius: 16,
            padding: 16,
            alignItems: "center",
            justifyContent: "center",
            marginRight: 12,
            minWidth: 120,
          }}>
            <Icon name={cat.icon} size={28} color="#2563eb" />
            <Text style={{ marginTop: 8, textAlign: "center", fontWeight: "500" }}>{cat.name}</Text>
          </View>
        ))}
      </ScrollView>

      {/* üíß –¶–µ–ª—å –ø–æ –≤–æ–¥–µ */}
      <View style={{ marginBottom: 24 }}>
        <Text style={{ fontSize: 18, fontWeight: "600", marginBottom: 12 }}>–¶–µ–ª—å: 8 —Å—Ç–∞–∫–∞–Ω–æ–≤ –≤–æ–¥—ã</Text>
        <View style={{ flexDirection: "row", flexWrap: "wrap" }}>
          {Array.from({ length: 8 }).map((_, i) => (
            <Animated.View key={i} style={{
              width: 40,
              height: 40,
              borderRadius: 8,
              backgroundColor: i < waterCount ? "#3b82f6" : "#e5e7eb",
              marginRight: 8,
              marginBottom: 8,
              transform: i === waterCount - 1 ? [{ scale: glassScale }] : [],
            }} />
          ))}
        </View>
        <TouchableOpacity onPress={addWater} style={{
          marginTop: 12,
          backgroundColor: "#3b82f6",
          padding: 10,
          borderRadius: 12,
          alignSelf: "flex-start",
        }}>
          <Text style={{ color: "white", fontWeight: "bold" }}>+ –°—Ç–∞–∫–∞–Ω –≤–æ–¥—ã</Text>
        </TouchableOpacity>
      </View>

      {/* üéµ –ó–≤—É–∫–∏ –¥–ª—è —Å–Ω–∞ (–±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω —Ç–∞–π–º–µ—Ä –ø–æ–∑–∂–µ) */}
      <TouchableOpacity
        onPress={toggleSound}
        style={{
          marginBottom: 20,
          backgroundColor: "#dbeafe",
          borderRadius: 16,
          padding: 16,
          flexDirection: "row",
          alignItems: "center",
          justifyContent: "space-between",
        }}
      >
        <View>
          <Text style={{ fontSize: 16, fontWeight: "600" }}>–†–∞—Å—Å–ª–∞–±–ª—è—é—â–∏–π –∑–≤—É–∫</Text>
          <Text style={{ color: "#3b82f6" }}>–î–æ–∂–¥—å, –ª–µ—Å, –≤–µ—Ç–µ—Ä (—Ç–∞–π–º–µ—Ä —Å–∫–æ—Ä–æ)</Text>
        </View>
        <Icon name={isPlaying ? "pause-circle-outline" : "play-circle-outline"} size={36} color="#2563eb" />
      </TouchableOpacity>

      {/* üåÄ –ê–Ω–∏–º–∞—Ü–∏—è –¥—ã—Ö–∞–Ω–∏—è */}
      <View style={{ alignItems: "center", marginBottom: 40 }}>
        <Text style={{ fontSize: 18, fontWeight: "600", marginBottom: 12 }}>–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –¥—ã—Ö–∞–Ω–∏—è</Text>
        <Animated.View style={{
          width: 100,
          height: 100,
          borderRadius: 50,
          backgroundColor: "#93c5fd",
          transform: [{ scale: breathAnim }],
        }} />
        <Text style={{ marginTop: 12, fontSize: 14, color: "#6b7280" }}>
          –í–¥–æ—Ö ‚Äî 5 —Å–µ–∫ | –í—ã–¥–æ—Ö ‚Äî 5 —Å–µ–∫
        </Text>
      </View>
    </ScrollView>
  );
}
